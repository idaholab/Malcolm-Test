import mmguero

UPLOAD_ARTIFACTS = [
    "other/malcolm-micro-ctf.pcap",
    "plugins/cve-2020-0601/broken.pcap",
    "plugins/cve-2020-0601/ecdsa-cert.pcap",
    "plugins/cve-2020-0601/explicit.pcap",
    "plugins/cve-2020-0601/exploit.pcap",
    "plugins/cve-2020-13777/chrome-34-google.trace",
    "plugins/cve-2020-13777/gnutls-tls1.2-non-vulnerable.pcap",
    "plugins/cve-2020-13777/gnutls-tls1.2-vulnerable.pcap",
    "plugins/cve-2020-13777/gnutls-tls1.3.pcap",
    "plugins/CVE-2020-16898/6in4-linklocal-hlimit-less255.pcap",
    "plugins/CVE-2020-16898/ipv6-neighbor-discovery.pcap",
    "plugins/CVE-2020-16898/ipv6-router-advertisement-leaving.pcap",
    "plugins/CVE-2020-16898/pi3_poc.pcap",
    "plugins/CVE-2020-16898/RS-RA.pcap",
    "plugins/CVE-2021-38647/CVE-2021-38647-exploit-craigmunsw-omigod-lab.pcap",
    "plugins/CVE-2021-41773/apache_exploit_success.pcap",
    "plugins/cve-2021-44228/2021-12-11-thru-13-server-activity-with-log4j-attempts.pcap",
    "plugins/cve-2021-44228/log4j-attack.pcap",
    "plugins/cve-2021-44228/log4j-dns_exfil.pcap",
    "plugins/cve-2021-44228/log4j-user_agent.pcap",
    "plugins/cve-2021-44228/log4j-webapp.pcap",
    "plugins/cve-2021-44228/spcap-CEXKLs3NQWdEM2CoMj-1639421287179170294-1.pcap",
    "plugins/cve-2022-26809/cve-2022-26809-4.pcap",
    "plugins/CVE-2022-3602/sample_OpenSSLv3.0.5.pcap",
    "plugins/CVE-2022-3602/spookyssl-merged.pcap",
    "plugins/download_over_dns.pcap",
    "plugins/http-more-files-names/favicon.pcap",
    "plugins/http-more-files-names/http-etag-and-filename.pcap",
    "plugins/http-more-files-names/http-filename-and-etag.pcap",
    "plugins/http-more-files-names/http-filename.pcap",
    "plugins/quasarrat.pcap",
    "plugins/smb_mimikatz_copy_to_host.pcap",
    "plugins/zeek-EternalSafety/doublepulsar-backdoor-connect-win7.pcap",
    "plugins/zeek-EternalSafety/esteemedaudit-failed-XPSP2.pcap",
    "plugins/zeek-EternalSafety/eternalblue-failed-patched-win7.pcap",
    "plugins/zeek-EternalSafety/eternalblue-success-unpatched-win7.pcap",
    "plugins/zeek-EternalSafety/eternalchampion.pcap",
    "plugins/zeek-EternalSafety/eternalromance-doublepulsar-meterpreter.pcap",
    "plugins/zeek-EternalSafety/eternalromance-success-2008r2.pcap",
    "plugins/zeek-EternalSafety/metasploit-ms017-010-win7x64.pcap",
    "plugins/zeek-EternalSafety/wannacry.pcap",
    "plugins/zeek-httpattacks/http.trace",
    "plugins/zeek-sniffpass/http_post.trace",
    "plugins/zeek-xor-exe-plugin/2015-04-09-Nuclear-EK-traffic.pcap",
    "plugins/zerologon/CVE-2020-1472_exploit_win2016.pcap",
    "plugins/zerologon/CVE-2020-1472_exploit_win2019.pcap",
    "plugins/zerologon/CVE-2020-1472_test_win2016.pcap",
    "plugins/zerologon/CVE-2020-1472_test_win2019.pcap",
    "protocols/BACnet.pcap",
    "protocols/BSAP.pcap",
    "protocols/DCERPC.pcap",
    "protocols/DHCP.pcap",
    "protocols/DNP3.pcap",
    "protocols/DNS.pcap",
    "protocols/ENIP.pcap",
    "protocols/ETHERCAT.pcap",
    "protocols/FTP.pcap",
    "protocols/GENISYS.pcap",
    "protocols/HARTIP.pcap",
    "protocols/HTTP_1.pcap",
    "protocols/HTTP_2.pcap",
    "protocols/IPsec.pcap",
    "protocols/IRC.pcap",
    "protocols/KRB5.pcap",
    "protocols/LDAP.pcap",
    "protocols/Modbus.pcap",
    "protocols/MQTT.pcap",
    "protocols/MySQL.pcap",
    "protocols/NTLM.pcap",
    "protocols/NTP.pcap",
    "protocols/OPCUA-Binary.pcap",
    "protocols/OpenVPN.pcap",
    "protocols/OSPF.pcap",
    "protocols/PROFINET.pcap",
    "protocols/QUIC.pcap",
    "protocols/RADIUS.pcap",
    "protocols/RDP.pcap",
    "protocols/RFB.pcap",
    "protocols/S7comm.pcap",
    "protocols/SIP.pcap",
    "protocols/SMB.pcap",
    "protocols/SMTP.pcap",
    "protocols/SNMP.pcap",
    "protocols/SSH.pcap",
    "protocols/SSL.pcap",
    "protocols/STUN.pcap",
    "protocols/Synchrophasor.pcap",
    "protocols/Syslog.pcap",
    "protocols/TDS.pcap",
    "protocols/Telnet.pcap",
    "protocols/TFTP.pcap",
    "protocols/Tunnels.pcap",
    "protocols/WireGuard.pcap",
]


def test_malcolm_pcap_hash(
    pcap_hash_map,
):
    assert all([pcap_hash_map.get(x, None) for x in mmguero.GetIterable(UPLOAD_ARTIFACTS)])
